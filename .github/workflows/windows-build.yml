name: Windows Build

on:
  workflow_dispatch:

jobs:
  build:
    # Only run if triggered from a release branch
    if: startsWith(github.ref, 'refs/heads/release/')
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Extract version from branch name
        id: version
        shell: bash
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          VERSION=${BRANCH_NAME#release/}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          # Validate semver format
          if ! [[ $VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Branch name must follow semver format (e.g., release/1.0.0)"
            exit 1
          fi

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r api/requirements.txt

      - name: Build Python API Executable
        run: |
          cd api
          pyinstaller --onefile --name api main.py
          cd ..
          # Create dist directory if it doesn't exist
          mkdir -Force dist
          # On Windows, copy with .exe extension
          copy api\dist\api.exe dist\api.exe

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: |
          npm install

      - name: Build Windows App
        run: |
          npm run make

      - name: Create ZIP Archive
        run: |
          cd out
          powershell -Command "Compress-Archive -Path 'make/squirrel.windows/x64' -DestinationPath 'image-ranker-win32-x64-v${{ steps.version.outputs.version }}.zip'"
          cd ..

      - name: Upload Windows Executable
        uses: actions/upload-artifact@v4
        with:
          name: image-ranker-windows-v${{ steps.version.outputs.version }}
          path: out/image-ranker-win32-x64-v${{ steps.version.outputs.version }}.zip
          if-no-files-found: error
